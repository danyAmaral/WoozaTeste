// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wooza.PlanosTelefonia.Infraestrutura;

namespace Wooza.PlanosTelefonia.Infraestrutura.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wooza.PlanosTelefonia.Dominio.DDD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("DDDs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cidade = "Vitória",
                            Codigo = 27,
                            Estado = "ES"
                        },
                        new
                        {
                            Id = 2,
                            Cidade = "Serra",
                            Codigo = 27,
                            Estado = "ES"
                        },
                        new
                        {
                            Id = 3,
                            Cidade = "Vila Velha",
                            Codigo = 27,
                            Estado = "ES"
                        },
                        new
                        {
                            Id = 4,
                            Cidade = "Mantena",
                            Codigo = 33,
                            Estado = "MG"
                        },
                        new
                        {
                            Id = 5,
                            Cidade = "Governador Valadares",
                            Codigo = 33,
                            Estado = "MG"
                        },
                        new
                        {
                            Id = 6,
                            Cidade = "Araçuaí",
                            Codigo = 33,
                            Estado = "MG"
                        },
                        new
                        {
                            Id = 7,
                            Cidade = "Rio de Janeiro",
                            Codigo = 21,
                            Estado = "RJ"
                        },
                        new
                        {
                            Id = 8,
                            Cidade = "Juíz de Fora",
                            Codigo = 32,
                            Estado = "MG"
                        },
                        new
                        {
                            Id = 9,
                            Cidade = "Natal",
                            Codigo = 84,
                            Estado = "RN"
                        },
                        new
                        {
                            Id = 10,
                            Cidade = "Volta Redonda",
                            Codigo = 24,
                            Estado = "RJ"
                        });
                });

            modelBuilder.Entity("Wooza.PlanosTelefonia.Dominio.Operadora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Operadoras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Vivo"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Oi"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Tim"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Claro"
                        });
                });

            modelBuilder.Entity("Wooza.PlanosTelefonia.Dominio.PlanoTelefonia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("DDDId")
                        .HasColumnType("int");

                    b.Property<string>("FranquiaInternet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Minutos")
                        .HasColumnType("int");

                    b.Property<int>("OperadoraId")
                        .HasColumnType("int");

                    b.Property<int>("TipoPlano")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("DDDId");

                    b.HasIndex("OperadoraId");

                    b.ToTable("PlanosTelefonia");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "Controle Vivo",
                            DDDId = 1,
                            FranquiaInternet = "4GB",
                            Minutos = 500,
                            OperadoraId = 1,
                            TipoPlano = 3,
                            Valor = 39.90m
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "Pós Vivo",
                            DDDId = 1,
                            FranquiaInternet = "10GB",
                            Minutos = 1000,
                            OperadoraId = 1,
                            TipoPlano = 2,
                            Valor = 79.90m
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "Pré Vivo",
                            DDDId = 1,
                            FranquiaInternet = "2GB",
                            Minutos = 300,
                            OperadoraId = 1,
                            TipoPlano = 1,
                            Valor = 19.90m
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "Pré Vivo",
                            DDDId = 4,
                            FranquiaInternet = "2GB",
                            Minutos = 300,
                            OperadoraId = 1,
                            TipoPlano = 1,
                            Valor = 21.90m
                        },
                        new
                        {
                            Id = 5,
                            Codigo = "Controle Vivo",
                            DDDId = 4,
                            FranquiaInternet = "4GB",
                            Minutos = 500,
                            OperadoraId = 1,
                            TipoPlano = 3,
                            Valor = 39.90m
                        },
                        new
                        {
                            Id = 6,
                            Codigo = "Controle Oi",
                            DDDId = 7,
                            FranquiaInternet = "4GB",
                            Minutos = 500,
                            OperadoraId = 2,
                            TipoPlano = 3,
                            Valor = 39.90m
                        },
                        new
                        {
                            Id = 7,
                            Codigo = "Pós Oi",
                            DDDId = 7,
                            FranquiaInternet = "10GB",
                            Minutos = 1000,
                            OperadoraId = 2,
                            TipoPlano = 2,
                            Valor = 79.90m
                        },
                        new
                        {
                            Id = 8,
                            Codigo = "Pré Oi",
                            DDDId = 7,
                            FranquiaInternet = "2GB",
                            Minutos = 300,
                            OperadoraId = 2,
                            TipoPlano = 1,
                            Valor = 30.00m
                        },
                        new
                        {
                            Id = 9,
                            Codigo = "Pré Oi",
                            DDDId = 1,
                            FranquiaInternet = "2GB",
                            Minutos = 300,
                            OperadoraId = 2,
                            TipoPlano = 1,
                            Valor = 22.90m
                        },
                        new
                        {
                            Id = 10,
                            Codigo = "Controle Oi",
                            DDDId = 7,
                            FranquiaInternet = "4GB",
                            Minutos = 500,
                            OperadoraId = 2,
                            TipoPlano = 3,
                            Valor = 39.90m
                        },
                        new
                        {
                            Id = 11,
                            Codigo = "Controle TIM",
                            DDDId = 7,
                            FranquiaInternet = "4GB",
                            Minutos = 500,
                            OperadoraId = 3,
                            TipoPlano = 3,
                            Valor = 39.90m
                        },
                        new
                        {
                            Id = 12,
                            Codigo = "Pós TIM",
                            DDDId = 1,
                            FranquiaInternet = "10GB",
                            Minutos = 1000,
                            OperadoraId = 3,
                            TipoPlano = 2,
                            Valor = 79.90m
                        },
                        new
                        {
                            Id = 13,
                            Codigo = "Pré TIM",
                            DDDId = 1,
                            FranquiaInternet = "2GB",
                            Minutos = 300,
                            OperadoraId = 3,
                            TipoPlano = 1,
                            Valor = 30.00m
                        },
                        new
                        {
                            Id = 14,
                            Codigo = "Pré TIM",
                            DDDId = 4,
                            FranquiaInternet = "2GB",
                            Minutos = 300,
                            OperadoraId = 3,
                            TipoPlano = 1,
                            Valor = 22.90m
                        },
                        new
                        {
                            Id = 15,
                            Codigo = "Controle TIM",
                            DDDId = 4,
                            FranquiaInternet = "4GB",
                            Minutos = 500,
                            OperadoraId = 3,
                            TipoPlano = 3,
                            Valor = 39.90m
                        },
                        new
                        {
                            Id = 16,
                            Codigo = "Controle Claro",
                            DDDId = 7,
                            FranquiaInternet = "4GB",
                            Minutos = 500,
                            OperadoraId = 4,
                            TipoPlano = 3,
                            Valor = 39.90m
                        },
                        new
                        {
                            Id = 17,
                            Codigo = "Pós Claro",
                            DDDId = 1,
                            FranquiaInternet = "10GB",
                            Minutos = 1000,
                            OperadoraId = 4,
                            TipoPlano = 2,
                            Valor = 79.90m
                        },
                        new
                        {
                            Id = 18,
                            Codigo = "Pré Claro",
                            DDDId = 1,
                            FranquiaInternet = "2GB",
                            Minutos = 300,
                            OperadoraId = 4,
                            TipoPlano = 1,
                            Valor = 30.00m
                        },
                        new
                        {
                            Id = 19,
                            Codigo = "Pré Claro",
                            DDDId = 7,
                            FranquiaInternet = "2GB",
                            Minutos = 300,
                            OperadoraId = 3,
                            TipoPlano = 1,
                            Valor = 22.90m
                        },
                        new
                        {
                            Id = 20,
                            Codigo = "Controle Claro",
                            DDDId = 7,
                            FranquiaInternet = "4GB",
                            Minutos = 500,
                            OperadoraId = 3,
                            TipoPlano = 3,
                            Valor = 39.90m
                        });
                });

            modelBuilder.Entity("Wooza.PlanosTelefonia.Dominio.PlanoTelefonia", b =>
                {
                    b.HasOne("Wooza.PlanosTelefonia.Dominio.DDD", "DDD")
                        .WithMany("PlanosTelefonicos")
                        .HasForeignKey("DDDId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Wooza.PlanosTelefonia.Dominio.Operadora", "Operadora")
                        .WithMany("PlanosTelefonicos")
                        .HasForeignKey("OperadoraId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
